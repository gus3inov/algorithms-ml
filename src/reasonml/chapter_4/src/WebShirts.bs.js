// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var $$String = require("bs-platform/lib/js/string.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function price(size) {
  if (typeof size === "number") {
    switch (size) {
      case 0 : 
          return 11.00;
      case 1 : 
          return 12.50;
      case 2 : 
          return 14.00;
      
    }
  } else {
    return 16.00 + (size[0] - 1 | 0) * 0.50;
  }
}

var calcInput = document.getElementById("calcInput");

var calcInput$1 = (calcInput == null) ? undefined : Caml_option.some(calcInput);

var sizeSelect = document.getElementById("size");

var sizeSelect$1 = (sizeSelect == null) ? undefined : Caml_option.some(sizeSelect);

var priceElem = document.getElementById("price");

var priceElem$1 = (priceElem == null) ? undefined : Caml_option.some(priceElem);

function stringOfShirtSize(size) {
  if (typeof size === "number") {
    switch (size) {
      case 0 : 
          return "S";
      case 1 : 
          return "M";
      case 2 : 
          return "L";
      
    }
  } else {
    return $$String.make(size[0], /* "X" */88) + "L";
  }
}

function shirtSizeOfString(str) {
  switch (str) {
    case "L" : 
        return /* Large */2;
    case "M" : 
        return /* Medium */1;
    case "S" : 
        return /* Small */0;
    case "XL" : 
        return /* XLarge */[1];
    case "XXL" : 
        return /* XLarge */[2];
    case "XXXL" : 
        return /* XLarge */[3];
    case "XXXXL" : 
        return /* XLarge */[4];
    default:
      return undefined;
  }
}

function getValue(element) {
  var __x = Belt_Option.map(element, (function (prim) {
          return prim;
        }));
  return Belt_Option.map(__x, (function (prim) {
                return prim.value;
              }));
}

function toInt(s) {
  var exit = 0;
  var result;
  try {
    result = Caml_format.caml_int_of_string(s);
    exit = 1;
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn[0] === Caml_builtin_exceptions.failure) {
      if (exn[1] === "int_of_string") {
        return undefined;
      } else {
        throw exn;
      }
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    return result;
  }
  
}

function calculate(param) {
  var __x = getValue(calcInput$1);
  var quantity = Belt_Option.flatMap(__x, toInt);
  var __x$1 = getValue(sizeSelect$1);
  var __x$2 = Belt_Option.flatMap(__x$1, shirtSizeOfString);
  var unitPrice = Belt_Option.map(__x$2, price);
  var totalPrice = unitPrice !== undefined && quantity !== undefined ? unitPrice * quantity : undefined;
  var priceString = totalPrice !== undefined ? totalPrice.toFixed(2) : "";
  Belt_Option.map(priceElem$1, (function (__x) {
          __x.innerText = priceString;
          return /* () */0;
        }));
  return /* () */0;
}

if (!(calcInput == null)) {
  calcInput.addEventListener("input", calculate);
}

if (!(sizeSelect == null)) {
  sizeSelect.addEventListener("change", calculate);
}

var D = 0;

var Document = 0;

var Elem = 0;

exports.D = D;
exports.Document = Document;
exports.Elem = Elem;
exports.price = price;
exports.calcInput = calcInput$1;
exports.sizeSelect = sizeSelect$1;
exports.priceElem = priceElem$1;
exports.stringOfShirtSize = stringOfShirtSize;
exports.shirtSizeOfString = shirtSizeOfString;
exports.getValue = getValue;
exports.toInt = toInt;
exports.calculate = calculate;
/* calcInput Not a pure module */
