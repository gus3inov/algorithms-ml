// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Random = require("bs-platform/lib/js/random.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

function cumulative(pct) {
  return Belt_Array.reduce(pct, /* tuple */[
                0,
                /* array */[]
              ], (function (param, item) {
                  var accSum = param[0];
                  return /* tuple */[
                          accSum + item | 0,
                          Belt_Array.concat(param[1], /* array */[accSum + item | 0])
                        ];
                }))[1];
}

function getRandomElement(arr) {
  var r = Random.$$int(100);
  var _idx = 0;
  while(true) {
    var idx = _idx;
    if (idx === arr.length) {
      return Caml_array.caml_array_get(arr, 0)[0];
    } else {
      var match = Caml_array.caml_array_get(arr, idx);
      var match$1 = r <= match[1];
      if (match$1) {
        return match[0];
      } else {
        _idx = idx + 1 | 0;
        continue ;
      }
    }
  };
}

var sizeArr = Belt_Array.zip(/* array */[
      "XS",
      "S",
      "M",
      "L",
      "XL",
      "XXL",
      "XXXL"
    ], cumulative(/* array */[
          5,
          15,
          40,
          15,
          15,
          5,
          5
        ]));

var sleeveArr = Belt_Array.zip(/* array */[
      "short",
      "long",
      "xlong"
    ], cumulative(/* array */[
          30,
          60,
          10
        ]));

var colorArr = Belt_Array.zip(/* array */[
      "white",
      "blue",
      "red",
      "green",
      "brown"
    ], cumulative(/* array */[
          25,
          25,
          25,
          15,
          10
        ]));

var patternArr = Belt_Array.zip(/* array */[
      "solid",
      "pinstripe",
      "check"
    ], cumulative(/* array */[
          40,
          40,
          20
        ]));

var longCuffArr = Belt_Array.zip(/* array */[
      "button",
      "french",
      "none"
    ], cumulative(/* array */[
          60,
          25,
          16
        ]));

var shortCuffArr = Belt_Array.zip(/* array */[
      "button",
      "french",
      "none"
    ], cumulative(/* array */[
          10,
          5,
          85
        ]));

var collarArr = Belt_Array.zip(/* array */[
      "button",
      "straight",
      "spread"
    ], cumulative(/* array */[
          40,
          40,
          20
        ]));

function createOrderString(param) {
  var sleeve = getRandomElement(sleeveArr);
  var match = sleeve === "short";
  return String(Random.$$int(5) + 2 | 0) + ("," + (getRandomElement(sizeArr) + ("," + (getRandomElement(colorArr) + ("," + (getRandomElement(patternArr) + ("," + (getRandomElement(collarArr) + ("," + (sleeve + ("," + getRandomElement(match ? shortCuffArr : longCuffArr))))))))))));
}

function main(param) {
  Random.self_init(/* () */0);
  var helper = function (_acc, _n) {
    while(true) {
      var n = _n;
      var acc = _acc;
      if (n !== 0) {
        _n = n - 1 | 0;
        _acc = acc + (createOrderString(/* () */0) + "\n");
        continue ;
      } else {
        return acc;
      }
    };
  };
  var outputString = helper("Quantity,Size,Color,Pattern,Collar,Sleeve,Cuff\n", 100);
  Fs.writeFileSync("orders.csv", outputString, "utf8");
  return /* () */0;
}

main(/* () */0);

exports.cumulative = cumulative;
exports.getRandomElement = getRandomElement;
exports.sizeArr = sizeArr;
exports.sleeveArr = sleeveArr;
exports.colorArr = colorArr;
exports.patternArr = patternArr;
exports.longCuffArr = longCuffArr;
exports.shortCuffArr = shortCuffArr;
exports.collarArr = collarArr;
exports.createOrderString = createOrderString;
exports.main = main;
/* sizeArr Not a pure module */
